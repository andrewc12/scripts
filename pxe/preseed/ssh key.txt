
I've got the following snippet in a Debian preseed.cfg file:

    d-i preseed/late_command string \
    in-target mkdir --mode=700 /home/vagrant/.ssh; \
    in-target chown vagrant:vagrant /home/vagrant/.ssh; \
    in-target echo 'ssh-rsa
AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr
+kz4TjGYe7gHzIw
+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL
+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm
+R4LOzFUGaHqHDLKLX
+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant
insecure public key' > /home/vagrant/.ssh/authorized_keys; \
    in-target chown vagrant:vagrant /home/vagrant/.ssh/
authorized_keys; \
    in-target chmod 0600 /home/vagrant/.ssh/authorized_keys; \

but I'm having a terrible time with the build not actually installing
the vagrant.pub key. I tried using this instead:

    in-target wget --no-check-certificate --output-document=/home/
vagrant/.ssh/authorized_keys https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub;
\

but with similar lack of public key existance in the new image.
Obviously I can put it there by hand after the image is completed, but
that seems to defeat the purpose of automating the install. How are
other folks getting the v


































apt-get install tftp-hpa


d-i preseed/late_command string chroot /target sh -c "cd /tmp && tftp 10.0.0.137 -c get debian-installer/postinstall.sh && /bin/sh -x /tmp/postinstall.sh"







d-i preseed/late_command string chroot /target sh -c "mkdir -pm 700 /root/.ssh && echo 'ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAhP5VvOuGObKch4q8H8CTIbZswuaaysvHxjZ0JBI2AIfbpPbGIPlKE5jKtNxoSITQdR6PNXu8UgoAdL1828QwcDCwsfjNg0G1Wv2+i/b6Kpd8M3DN9HyKk5C+2nXzfNw2ow5YfuN5GlbNEB7C6WYrQQsATqILB+45oDuZhjV43GE= postinstall key' > /root/.ssh/authorized_keys && chmod 0600 /root/.ssh/authorized_keys && chown -R root:root /root/.ssh"
